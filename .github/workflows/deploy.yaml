# Updated GitHub Actions Workflow
name: Build
on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: "APP_VERSION: Docker image tag will be derived from this + a timestamp"
        required: true

jobs:
  set_global_timestamp:
    name: Set global timestamp
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.step1.outputs.timestamp }}
    steps:
      - id: step1
        run: |-
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Docker image tag timestamp: $TIMESTAMP"
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

  build:
    name: Build-Push-Docker-Image
    runs-on: ubuntu-latest
    needs: set_global_timestamp
    strategy:
      matrix:
        include:
          - image_name: flex-svc-constraints
            image_tag: ${{ github.event.inputs.appVersion }}.${{ needs.set_global_timestamp.outputs.timestamp }}
            gcr_project: autogrid-dev
            build_directory: .
            dockerfile: ./Dockerfile
            tag_as_latest: false

    env:
      IMAGE_NAME: ${{ matrix.image_name }}
      GCR_PROJECT: ${{ matrix.gcr_project }}
      BUILD_DIRECTORY: ${{ matrix.build_directory }}
      DOCKERFILE: ${{ matrix.dockerfile }}
      IMAGE_TAG: ${{ matrix.image_tag }}
      TAG_AS_LATEST: ${{ matrix.tag_as_latest }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"  # Update to the latest version
        with:
          credentials_json: ${{ secrets.GCR_AUTOGRID_DEV_GITHUB_ACTIONS_KEY }}
          project_id: ${{ env.GCR_PROJECT }}
          export_default_credentials: false
          cleanup_credentials: true

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v1  # Update to the latest version
        with:
          version: latest

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker -q

      # Build docker image
      - name: Docker Build
        run: |-
          cd $BUILD_DIRECTORY

          if [[ ! $IMAGE_TAG ]]; then
            IMAGE_TAG=$(date +%Y%m%d%H%M)
          fi

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          docker build -t $IMAGE_NAME:$IMAGE_TAG -f $DOCKERFILE .
          docker tag $IMAGE_NAME:$IMAGE_TAG us.gcr.io/$GCR_PROJECT/core/$IMAGE_NAME:$IMAGE_TAG

          if [[ $TAG_AS_LATEST == 'true' ]]; then
            docker tag $IMAGE_NAME:$IMAGE_TAG us.gcr.io/$GCR_PROJECT/core/$IMAGE_NAME:latest
          fi

      # Push image to Google Container Registry
      - name: Push Image to GCR
        run: |-
          docker push us.gcr.io/$GCR_PROJECT/core/$IMAGE_NAME:${{ env.IMAGE_TAG }}

          if [[ $TAG_AS_LATEST == 'true' ]]; then
            docker push us.gcr.io/$GCR_PROJECT/core/$IMAGE_NAME:latest
          fi
